const config = global.qConfig;
const errorMsg = 'Please specify a qConfig global variable';

async function loadCapabilityApis() {
  if (!config) {
    throw new Error(errorMsg);
  }
  const capabilityApisJS = document.createElement('script');
  capabilityApisJS.src = `${(config.secure ? 'https://' : 'http://') + config.host + (config.port ? `:${config.port}` : '') + config.prefix}resources/assets/external/requirejs/require.js`;
  document.head.appendChild(capabilityApisJS);
  capabilityApisJS.loaded = new Promise((resolve) => {
    capabilityApisJS.onload = () => { resolve(); };
  });
  const capabilityApisCSS = document.createElement('link');
  capabilityApisCSS.href = `${(config.secure ? 'https://' : 'http://') + config.host + (config.port ? `:${config.port}` : '') + config.prefix}resources/autogenerated/qlik-styles.css`;
  capabilityApisCSS.type = 'text/css';
  capabilityApisCSS.rel = 'stylesheet';
  document.head.appendChild(capabilityApisCSS);
  capabilityApisCSS.loaded = new Promise((resolve) => {
    capabilityApisCSS.onload = () => { resolve(); };
  });
  await Promise.all([capabilityApisJS.loaded, capabilityApisCSS.loaded]);
}

async function qAppAsync() {
  try {
    await loadCapabilityApis();
    window.require.config({
      baseUrl: `${(config.secure ? 'https://' : 'http://') + config.host + (config.port ? `:${config.port}` : '') + config.prefix}resources`,
      paths: {
        qlik: `${(config.secure ? 'https://' : 'http://') + config.host + (config.port ? `:${config.port}` : '') + config.prefix}resources/js/qlik`,
      },
    });
    return new Promise((resolve) => {
      window.require(['js/qlik'], (qlik) => {
        const app = qlik.openApp(config.appId, { ...config, isSecure: config.secure });
        resolve(app);
      });
    });
  } catch (error) {
    throw new Error(errorMsg);
  }
}

const qAppPromise = qAppAsync();

export default qAppPromise;
